
HTTPS ?
htf ?

WHEN USER IS NOT AUTHENTICATED
- he gets access to a set of shared demo files
-- i.e he has get access to the gpx controller, with access to a demo set of gpx
- he cannot persist state

-- check for authentication failure @ http fx level (hfx)
	=> handle failure logic in client code

to register
-- via user page (label = login/signup when unauth, account when auth)
-- email address and 2 x password - 24 hour validity
-- signupuser created - NOT A FULL USER => separate tables
-- send email with registration token link
-- click on link => hit server with guid
-- if guid is valid, create full user, and return redirect to app (not auto-login)
(maybe have an intermediate page that stuffs the cookie into the browser - bad sec?)

login
-- via user page
-- persistent auth via cookie (1 week lifetime)

// USER CONTROLLER
- get = user info, none at the moment, don't implement ?
- post = create


	# confirm that user exist and is active
	# create random session auth token, store in db
	# ? set user as logged in on server ?
	# return persistent cookie

	# for each call, auth is checked is middleware
	# 	session auth token is extracted from cookie
	# 	looked up in user table
	#		no match => not authed (actually means breach attempt)
	#   	matches => check time period validity (creation date)

	# branch on auth status
	# 	if authed, user supplied to REST method as an argument
	# 	if not authed, null user is supplied
	# REST method privacy logic will then be user based

	# on startup, app will check for gpxsmaps.net cookie
	# 	if a cookie is found, then a test call will be made to auth controller (GET CALL)
	# 		if the test call is successful, then load proceeds as per normal
	# 		if test call is unsuccessful, then view is set to login
	#   if no cookie is found, then either go to my gpx, or go to signup
